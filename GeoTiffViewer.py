import rasterio
from rasterio.plot import show
import matplotlib.pyplot as plt
import numpy as np
import os

def view_geotiff(filepath, title="GeoTIFF View"):
    """
    Displays a GeoTIFF file using matplotlib.

    This function handles both single-band and multi-band (RGB/RGBA) GeoTIFFs.
    For multi-band images, it assumes the first three bands are Red, Green, and Blue.
    For single-band images, it uses a 'viridis' colormap.

    Args:
        filepath (str): The path to the GeoTIFF file.
        title (str): The title for the plot window.
    """
    if not os.path.exists(filepath):
        print(f"Error: File not found at '{filepath}'")
        return

    try:
        with rasterio.open(filepath) as src:
            print(f"Opening '{filepath}'...")
            print(f"Number of bands: {src.count}")
            print(f"Dimensions: {src.width} x {src.height}")
            print(f"Coordinate Reference System: {src.crs}")

            fig, ax = plt.subplots(1, 1, figsize=(8, 8))

            if src.count >= 3:
                # Multi-band image (assume first 3 are R, G, B or similar)
                # Create an RGB composite. rasterio's show can handle this directly.
                # The `show` function is a convenient wrapper around matplotlib's imshow.
                show((src, [1, 2, 3]), ax=ax, title=title)
                print("Displaying as an RGB composite (Bands 1, 2, 3).")
            
            elif src.count == 1:
                # Single-band image (like NDVI or a DEM)
                # The `show` function will automatically apply a colormap.
                show((src, 1), ax=ax, title=title, cmap='viridis')
                print("Displaying single band with 'viridis' colormap.")

            else:
                print(f"Cannot display GeoTIFF with {src.count} bands using this simple script.")
                return
            
            # Improve plot aesthetics
            ax.set_xlabel("X coordinate")
            ax.set_ylabel("Y coordinate")
            plt.show()

    except rasterio.errors.RasterioIOError as e:
        print(f"Error reading GeoTIFF file: {e}")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")


if __name__ == '__main__':
    # --- Instructions ---
    # You can choose which file to view by uncommenting one of the lines below.

    # Option 1: View the multi-band mock satellite image
    # This file must be generated first by running `create_mock_geotiff.py`
    mock_image_path = 'sample_multiband.tif'
    if os.path.exists(mock_image_path):
        view_geotiff(mock_image_path, title="Mock Multi-Band Satellite Image")
    else:
        print(f"File '{mock_image_path}' not found. Please run `create_mock_geotiff.py` first.")

    # Option 2: View the single-band NDVI result
    # This file is generated by running `calculate_ndvi.py`
    ndvi_result_path = 'ndvi_output.tif'
    if os.path.exists(ndvi_result_path):
        view_geotiff(ndvi_result_path, title="Calculated NDVI Result")
    else:
        print(f"File '{ndvi_result_path}' not found. Please run `calculate_ndvi.py` first.")

